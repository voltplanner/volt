generator client {
  provider      = "prisma-client-js"
  output        = "../../../../node_modules/@prisma/server"
  binaryTargets = ["native", "linux-musl", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AuthUser {
  id            String             @id @default(uuid())
  email         String             @unique
  firstname     String
  lastname      String
  password      String?
  completeCode String?
  role          AuthUserRoleEnum   @default(MEMBER)
  status        AuthUserStatusEnum @default(WAITING_COMPLETE)
  createdAt     DateTime           @default(now())
  deletedAt     DateTime?
  tokens        AuthRefreshToken[]
  notifications Notification[]
}

model AuthRefreshToken {
  id        String   @id @default(uuid())
  isRevoked Boolean  @default(false)
  expiresAt DateTime
  user      AuthUser @relation(fields: [userId], references: [id])
  userId    String
}

enum AuthUserRoleEnum {
  MEMBER
  ADMIN
  OWNER
}

enum AuthUserStatusEnum {
  WAITING_COMPLETE
  ACTIVE
  BLOCKED
}

model Notification {
  id      String               @id @default(uuid())
  topic   String
  message String
  link    String?
  type    NotificationTypeEnum
  sent    Boolean              @default(false)
  sentAt  DateTime?
  error   String?
  user    AuthUser             @relation(fields: [userId], references: [id])
  userId  String
}

enum NotificationTypeEnum {
  EMAIL
  WEB
}
